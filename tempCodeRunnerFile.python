from kivy.app import App
from kivy.uix.widget import Widget
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.button import Button
from kivy.lang import Builder
from kivy.uix.image import Image
from kivy.clock import Clock
from kivy.graphics.texture import Texture
from kivy import platform
'''if platform == "android":
    from android.permissions import request_permissions, Permission'''

import time


import cv2



class CamApp(App):

    def build(self):
        '''request_permissions([
#     Permission.CAMERA,
#     Permission.WRITE_EXTERNAL_STORAGE,
#     Permission.READ_EXTERNAL_STORAGE
# ])'''
        self.img1=Image()
        layout = BoxLayout()
        layout.add_widget(self.img1)
        self.click_btn=Button(
            text="Start",
            pos_hint={"center_x":.5,"center_y":.5},
            size_hint=(None,None)
        )
        self.click_btn.bind(on_press=self.start)
        layout.add_widget(self.click_btn)
        
        #opencv2 stuffs
        # self.capture = cv2.VideoCapture(0)
        # cv2.namedWindow("CV2 Image")
        #cv2.createButton("Start",self.update,None,cv2.QT_PUSH_BUTTON,1)
        # Clock.schedule_interval(self.update, 1.0/33.0)
        return layout
    
    def start(self,dt):
        self.capture = cv2.VideoCapture(0)
        #cv2.namedWindow("CV2 Image")
        Clock.schedule_interval(self.update, 1.0/33.0)

    def update(self, dt):
        # display image from cam in opencv window
       
       
        ret, frame = self.capture.read()
        # if frame.any() != None:
        frame= cv2.flip(frame, 1)
        cv2.imshow("CV2 Image", frame)
        # convert it to texture
        buf1 = cv2.flip(frame, 0)
        
        buf = buf1.tobytes()
    # print(type(buf))
        texture1 = Texture.create(size=(frame.shape[1], frame.shape[0]), colorfmt='bgr') 
    
        #if working on RASPBERRY PI, use colorfmt='rgba' here instead, but stick with "bgr" in blit_buffer. 
        texture1.blit_buffer(buf, colorfmt='bgr', bufferfmt='ubyte')
        # display image from the texture
        self.img1.texture = texture1

if __name__ == '_main_':
    CamApp().run()
    cv2.destroyAllWindows()